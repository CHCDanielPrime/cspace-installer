---

# Email address to receive certbot notifications
certbot_admin_email: no-reply@collectionspace.org

# SSL certs: uncomment this variable and leave it as an empty list
# to prevent SSL cert generation. This is generally only recommended
# for testing with IP addresses (no DNS configured)
# certbot_certs: []

# Password for the csadmin database user (update this and keep it SECRET!)
collectionspace_csadmin_password: keepmesecretplz

# Setting this to true will trigger build steps
# irrespective of other tasks status
collectionspace_force_build: False

# Domain name of the server added to DNS
# used by certbot to generate an SSL cert
collectionspace_domain: installer.collectionspace.org

# The CollectionSpace tenant that will be enabled and accessible online
collectionspace_tenant: core

#####
##### SECURITY - SETTINGS ONLY APPLY WHEN security.yml IS RUN
#####

# Mode for root user login, options:
# - "no" # disable root user ssh. Note: the quotes are required
# - prohibit-password # key only, password not allowed
# Warning: with permit_root_login = "no" ensure there is a user
# account available on the system for SSH access
permit_root_login: 'prohibit-password'

# List of ip addresses for SSH
# Example uses lookup current location ip address.
# We recommend using an explicit list of known and trusted IP addresses
ssh_allowed_ip_addresses:
  # - "{{ lookup('url', 'http://checkip.amazonaws.com', split_lines=False) | replace('\n', '') }}"
  - 0.0.0.0/0 # all

# List of users to create on the server. Remove the `users` variable or
# comment out these lines to disable user creation, however disabling
# users with permit_root_login = "no" can prevent SSH access so if you
# are not creating users with the installer ensure that at least 1 user
# account exists for SSH access on the server and / or set
# permit_root_login = "prohibit-password". Note: users created this way
# have passwordless sudo privileges (i.e. it's a root like account)
users: []
  # - name: deploy
  #   shell: bin/bash
  #   # Example resolves to: /path/to/$USERNAME/.ssh/id_rsa.pub on local machine
  #   public_key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
