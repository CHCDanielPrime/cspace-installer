#!/bin/bash
# Note: this is only for launching Packer built cspace instances on AWS
# ./scripts/launch core outreach # outreach.collectionspace.org
# ./scripts/launch fcart fineartmuseum collectionspace.org .tb4yb # fineartmuseum.tb4yb.collectionspace.org

# TODO: check key is present (./scripts/check_key)
# TODO: check dns is not allocated (./scripts/check_dns)

TENANT=${1:-core}
SITE=${2:-""}
DOMAIN=${3:-collectionspace.org}
SUBDOMAIN=${4:-""}
INSTANCE_TYPE=t3.medium
KEY_NAME=aws-cspace-pkr
FQDN="${SITE}${SUBDOMAIN}.${DOMAIN}"

if [ "$SITE" = "" ]; then
  echo "Site name must be specified to continue!"
  exit 1
fi

echo "Using FQDN: $FQDN"

IMAGE_ID=$(
  aws ec2 describe-images \
    --filters "Name=tag:tenant,Values=$TENANT" \
    --query "reverse(sort_by(Images, &CreationDate))[:1].ImageId" \
    --output text \
    --profile collectionspace
)

if [ "$IMAGE_ID" = "" ]; then
  echo "EC2 AMI was not found!"
  exit 1
fi

echo "Using image id: $IMAGE_ID"

ELASTIC_IP_ALLOC=$(
  aws ec2 allocate-address \
    --domain vpc \
    --output text --query 'AllocationId' \
    --profile collectionspace
)

if [ "$ELASTIC_IP_ALLOC" = "" ]; then
  echo "EC2 Elastic IP address was not allocated, unable to continue."
  exit 1
fi

INSTANCE_ID=$(
  aws ec2 run-instances \
    --associate-public-ip-address \
    --count 1 \
    --ebs-optimized \
    --image-id $IMAGE_ID \
    --instance-type $INSTANCE_TYPE \
    --key-name $KEY_NAME \
    --tag-specifications "ResourceType=instance,Tags=[{Key=Name,Value=cspace-$TENANT-$SITE}]" \
    --output text --query 'Instances[*].InstanceId' \
    --profile collectionspace
)

echo "Creating instance: $INSTANCE_ID"

while STATE=$(
  aws ec2 describe-instances \
    --instance-ids $INSTANCE_ID \
    --output text --query 'Reservations[*].Instances[*].State.Name' \
    --profile collectionspace
); test "$STATE" != "running"; do
    sleep 10;
    echo "Waiting for instance: $INSTANCE_ID (zzz)"
done;

echo "Associating EIP with instance: $INSTANCE_ID $ELASTIC_IP_ALLOC"

aws ec2 associate-address \
  --instance-id $INSTANCE_ID \
  --allocation-id $ELASTIC_IP_ALLOC \
  --profile collectionspace

IP_ADDRESS=$(
  aws ec2 describe-instances \
    --instance-ids $INSTANCE_ID \
    --output text --query 'Reservations[*].Instances[*].PublicIpAddress' \
    --profile collectionspace
)

if [ "$IP_ADDRESS" = "" ]; then
  echo "EC2 IP address was not found, unable to continue."
  exit 1
fi

./scripts/dns $IP_ADDRESS $SITE $DOMAIN $SUBDOMAIN

echo "Updating instance configuration"

ansible-playbook -i $IP_ADDRESS, collectionspace.yml \
  --user ubuntu \
  --private-key ~/.ssh/$KEY_NAME \
  --extra-vars "@vars/build.yml" \
  --extra-vars "collectionspace_tenant=$TENANT" \
  --extra-vars "collectionspace_addr=$FQDN" \
  --tags=swap,certbot,gateway,browser,vhost

echo "Configuration complete!"
echo "For SSH access use: ssh -i ~/.ssh/$KEY_NAME ubuntu@$FQDN"
echo "For web access use: https://$FQDN/cspace/$TENANT/login"
